name: Build and Release
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写入权限来创建Release

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的提交历史用于版本检查

      - name: Modify mod version
        run: |
            MOD_VERSION="$(grep "mod_version" gradle.properties | cut -d '=' -f 2 | tr -d ' ')"
            COMMIT_MOD_VERSION="$(git describe --tags --exact-match 2>/dev/null | cut -d 'v' -f 2)"
            EVENT_NAME="${{ github.event_name }}" 
            
            if [[ "$MOD_VERSION" != "$COMMIT_MOD_VERSION" && "$EVENT_NAME" != "workflow_dispatch" ]]; then
              echo "::warning::Version mismatch！gradle.properties ($MOD_VERSION) vs tag ($COMMIT_MOD_VERSION)"
              echo "::warning::Mod version will be modified to $COMMIT_MOD_VERSION"
              awk -v old="mod_version=$MOD_VERSION" -v new="mod_version=$COMMIT_MOD_VERSION" '{gsub(old, new)}1' gradle.properties > temp && mv temp gradle.properties
            fi

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 23

      - name: Make Gradle executable
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build

      - name: Extract Release Notes
        id: extract-release-info
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          RELEASE_TITLE=$(echo "$COMMIT_MSG" | head -n1)
          RELEASE_BODY=$(echo "$COMMIT_MSG" | tail -n +2 | sed ':a;N;$!ba;s/\n/\\n/g')
          
          echo "title=$RELEASE_TITLE" >> $GITHUB_OUTPUT
          echo "body=$RELEASE_BODY" >> $GITHUB_OUTPUT

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: veinmine-all.zip
          path: build/libs/*.jar

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ steps.extract-release-info.outputs.title }}
          body: ${{ steps.extract-release-info.outputs.body }}
          files: |
            build/libs/*.jar
            build/libs/*.json
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}