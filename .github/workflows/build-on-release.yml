name: Build and Release
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 23

      - name: Make Gradle executable
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Clean old cache files
        run: rm -rf ~/.gradle/caches/fabric-loom

      - name: Build All Versions
        run: |
          versions=(v1_21_8 v1_21_7 v1_21_6 v1_21_5 v1_21_4 v1_21_3)
          for version in "${versions[@]}"; do
            echo "Building for $version"
            ./gradlew build -Pmc_version=$version || exit 1
          done

      - name: Extract Release Notes
        id: extract-release-info
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          RELEASE_TITLE=$(echo "$COMMIT_MSG" | head -n1)
          RELEASE_BODY=$(echo "$COMMIT_MSG" | tail -n +2 | sed ':a;N;$!ba;s/\n/\\n/g')
          
          echo "title=$RELEASE_TITLE" >> $GITHUB_OUTPUT
          echo "body=$RELEASE_BODY" >> $GITHUB_OUTPUT

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: veinmine-all.zip
          path: build/libs/*.jar

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ steps.extract-release-info.outputs.title }}
          body: ${{ steps.extract-release-info.outputs.body }}
          files: |
            build/libs/*.jar
            build/libs/*.json
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
